/home/eric/Downloads/S01E22.mkv
/home/eric/Downloads/his.dark.materials.s01e04.1080p.hdtv.h264-brisk.mkv

gst-launch-1.0 -v filesrc location="/home/eric/Downloads/S01E22.mkv" ! matroskademux ! vorbisdec ! audioconvert ! audioresample ! autoaudiosink


gst-launch-1.0 -v filesrc location=/home/eric/Downloads/S01E22.mkv ! decodebin name=d \
    d. ! queue ! audioconvert ! audioresample ! scaletempo ! audioconvert ! audioresample ! autoaudiosink \
    d. ! queue ! videoconvert ! autovideosink



The decodebin element uses dynamic pads. You have to select pads using 'pad-added' signal.

Example

def decodebin_pad_added(self, element, pad):
    string = pad.query_caps(None).to_string()
    print('Found stream: %s' % string)
    if string.startswith('video/x-raw'):
        pad.link(encoder.get_static_pad('sink'))


decoder.connect("pad-added", decodebin_pad_added)


AttributeError: 'GstQueue' object has no attribute 'get_pad'
Found stream: audio/x-raw, format=(string)F32LE, layout=(string)interleaved, rate=(int)[ 4000, 96000 ], channels=(int)[ 1, 6 ]
Found stream: text/x-raw, format=(string)pango-markup


 gst-launch-1.0 -v filesrc location=test.mkv ! matroskademux name=demux ! video/x-h264 ! queue ! decodebin ! subtitleoverlay name=overlay ! videoconvert ! autovideosink  demux. ! subpicture/x-dvd ! queue ! overlay.

